{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport AllParkList from './AllParkList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  // let name = 'mario';\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [name, setName] = useState('mario');\n  const [parks, setParks] = useState([]);\n  const [Activities, setActivities] = useState([]);\n  useEffect(() => {\n    fetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setParks(result.data);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n    fetch(\"https://developer.nps.gov/api/v1/webcams?limit=10000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setActivities(result.data);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  const handleClick = e => {\n    setName('luigi');\n    console.log('hello, world', e);\n  };\n\n  const handleClickAgain = (name, e) => {\n    console.log('hello ' + name, e.target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(AllParkList, {\n      parks: parks,\n      title: \"All Parks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AllParkList, {\n      parks: parks.filter(park => park.fullName === \"Abraham Lincoln Birthplace National Historical Park\"),\n      title: \"Select Parks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"ApMy4DSU3LmRjpePNRS6vB+CCnU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/Home.js"],"names":["useEffect","useState","AllParkList","Home","error","setError","isLoaded","setIsLoaded","name","setName","parks","setParks","Activities","setActivities","fetch","then","res","json","result","data","handleClick","e","console","log","handleClickAgain","target","filter","park","fullName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAE,OAAF,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAC,oGAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACZX,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,QAAQ,CAACO,MAAM,CAACC,IAAR,CAAR;AACC,KANL,EAOI;AACA;AACA;AACCf,IAAAA,KAAD,IAAW;AACXG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACC,KAbL;AAeAU,IAAAA,KAAK,CAAC,uGAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACZX,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,MAAAA,aAAa,CAACK,MAAM,CAACC,IAAR,CAAb;AACC,KANL,EAOI;AACA;AACA;AACCf,IAAAA,KAAD,IAAW;AACXG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACC,KAbL;AAeH,GA/BQ,EA+BN,EA/BM,CAAT;;AAiCA,QAAMgB,WAAW,GAAIC,CAAD,IAAO;AACvBZ,IAAAA,OAAO,CAAC,OAAD,CAAP;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,CAA5B;AACH,GAHD;;AAKA,QAAMG,gBAAgB,GAAG,CAAChB,IAAD,EAAOa,CAAP,KAAa;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWf,IAAvB,EAA6Ba,CAAC,CAACI,MAA/B;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEf,KAApB;AAA2B,MAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEA,KAAK,CAACgB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,qDAAzC,CAApB;AAAqH,MAAA,KAAK,EAAC;AAA3H;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxDD;;GAAMzB,I;;KAAAA,I;AA0DN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport AllParkList from './AllParkList';\n\nconst Home = () => {\n    // let name = 'mario';\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [name, setName] = useState ('mario');\n    const [parks, setParks] = useState([]);\n    const [Activities, setActivities] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setParks(result.data);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n        fetch(\"https://developer.nps.gov/api/v1/webcams?limit=10000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setActivities(result.data);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n\n    const handleClick = (e) => {\n        setName('luigi');\n        console.log('hello, world', e);\n    }\n    \n    const handleClickAgain = (name, e) => {\n        console.log('hello ' + name, e.target);\n    }\n\n    return (  \n        <div className=\"home\">\n            <AllParkList parks={parks} title=\"All Parks\"/>\n            <AllParkList parks={parks.filter((park) => park.fullName === \"Abraham Lincoln Birthplace National Historical Park\")} title=\"Select Parks\"/>\n        </div>\n    );\n}\n \nexport default Home;"]},"metadata":{},"sourceType":"module"}