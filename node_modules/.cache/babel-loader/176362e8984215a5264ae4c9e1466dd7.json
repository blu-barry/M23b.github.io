{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/SelectWebcams.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport ParkNameCodePairs from \"./ParkNameCodePairs\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelecteWebcam() {\n  _s();\n\n  const [checkedState, setCheckedState] = useState(new Array(ParkNameCodePairs.length).fill(false));\n  const [total, setTotal] = useState(0);\n\n  const handleOnChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n    const totalPrice = updatedCheckedState.reduce(0);\n    setTotal(totalPrice);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelecteWebcam\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"park-preview\",\n      children: [ParkNameCodePairs.map((_ref, index) => {\n        let {\n          fullName,\n          parkCode\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"park-details\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `custom-checkbox-${index}`,\n                name: SelecteWebcam,\n                value: SelecteWebcam,\n                checked: checkedState[index],\n                onChange: () => handleOnChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `custom-checkbox-${index}`,\n                children: SelecteWebcam\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"park-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-section\",\n            children: \"Total:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-section\",\n            children: getFormattedPrice(total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SelecteWebcam, \"tnY7gkOKDkSyOwQ588KQQ0/TqRs=\");\n\n_c = SelecteWebcam;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelecteWebcam\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/SelectWebcams.js"],"names":["React","useEffect","useState","ParkNameCodePairs","SelecteWebcam","checkedState","setCheckedState","Array","length","fill","total","setTotal","handleOnChange","position","updatedCheckedState","map","item","index","totalPrice","reduce","fullName","parkCode","getFormattedPrice"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAC5C,IAAIK,KAAJ,CAAUJ,iBAAiB,CAACK,MAA5B,EAAoCC,IAApC,CAAyC,KAAzC,CAD4C,CAAhD;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMU,cAAc,GAAIC,QAAD,IAAc;AACnC,UAAMC,mBAAmB,GAAGT,YAAY,CAACU,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAC3CA,KAAK,KAAKJ,QAAV,GAAqB,CAACG,IAAtB,GAA6BA,IADH,CAA5B;AAIAV,IAAAA,eAAe,CAACQ,mBAAD,CAAf;AAEA,UAAMI,UAAU,GAAGJ,mBAAmB,CAACK,MAApB,CACjB,CADiB,CAAnB;AAIAR,IAAAA,QAAQ,CAACO,UAAD,CAAR;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,iBACGf,iBAAiB,CAACY,GAAlB,CAAsB,OAAyBE,KAAzB,KAAmC;AAAA,YAAlC;AAAEG,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAkC;AACxD,4BACE;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,EAAE,EAAG,mBAAkBJ,KAAM,EAF/B;AAGE,gBAAA,IAAI,EAAEb,aAHR;AAIE,gBAAA,KAAK,EAAEA,aAJT;AAKE,gBAAA,OAAO,EAAEC,YAAY,CAACY,KAAD,CALvB;AAME,gBAAA,QAAQ,EAAE,MAAML,cAAc,CAACK,KAAD;AANhC;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAO,gBAAA,OAAO,EAAG,mBAAkBA,KAAM,EAAzC;AAAA,0BAA6Cb;AAA7C;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAASa,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAkBD,OAnBA,CADH,eAqBE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBAAgCK,iBAAiB,CAACZ,KAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAtDqBN,a;;KAAAA,a","sourcesContent":["\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport ParkNameCodePairs from \"./ParkNameCodePairs\";\nimport \"./index.css\";\n\nexport default function SelecteWebcam() {\n    const [checkedState, setCheckedState] = useState(\n        new Array(ParkNameCodePairs.length).fill(false)\n    );\n\n    const [total, setTotal] = useState(0);\n\n    const handleOnChange = (position) => {\n      const updatedCheckedState = checkedState.map((item, index) =>\n        index === position ? !item : item\n      );\n  \n      setCheckedState(updatedCheckedState);\n  \n      const totalPrice = updatedCheckedState.reduce(\n        0\n      );\n  \n      setTotal(totalPrice);\n    };\n  \n    return (\n      <div className=\"SelecteWebcam\">\n        <h3>Select Toppings</h3>\n        <ul className=\"park-preview\">\n          {ParkNameCodePairs.map(({ fullName, parkCode }, index) => {\n            return (\n              <li key={index}>\n                <div className=\"park-details\">\n                  <div className=\"left-section\">\n                    <input\n                      type=\"checkbox\"\n                      id={`custom-checkbox-${index}`}\n                      name={SelecteWebcam}\n                      value={SelecteWebcam}\n                      checked={checkedState[index]}\n                      onChange={() => handleOnChange(index)}\n                    />\n                    <label htmlFor={`custom-checkbox-${index}`}>{SelecteWebcam}</label>\n                  </div>\n                  \n                </div>\n              </li>\n            );\n          })}\n          <li>\n            <div className=\"park-details\">\n              <div className=\"left-section\">Total:</div>\n              <div className=\"right-section\">{getFormattedPrice(total)}</div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}