{"ast":null,"code":"import{useEffect,useState}from'react';import Parks from'./Parks';import useFetch from'./useFetch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ParksList=function ParksList(){var _useFetch=useFetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\"),parks=_useFetch.data,isPending=_useFetch.isPending,error=_useFetch.error;//console.log(parks);\n//const parks = data;\n//const [Activities, setActivities] = useState([]);\n/*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/return/*#__PURE__*/_jsxs(\"div\",{className:\"ParksList\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"All Parks\"}),error&&/*#__PURE__*/_jsx(\"div\",{children:error}),isPending&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),parks&&/*#__PURE__*/_jsx(Parks,{parks:parks.data})]});};export default ParksList;","map":{"version":3,"sources":["/Users/mozzy/Public/Project Repos/client/src/ParksList.js"],"names":["useEffect","useState","Parks","useFetch","ParksList","parks","data","isPending","error"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,cAA0CD,QAAQ,CAAC,oGAAD,CAAlD,CAAcE,KAAd,WAAQC,IAAR,CAAqBC,SAArB,WAAqBA,SAArB,CAAgCC,KAAhC,WAAgCA,KAAhC,CACA;AACA;AACA;AAEA;AACJ;AACA;AACA,OAEI,mBACI,aAAK,SAAS,CAAC,WAAf,wBACA,iCADA,CAEMA,KAAK,eAAI,qBAAOA,KAAP,EAFf,CAGMD,SAAS,eAAI,mCAHnB,CAIMF,KAAK,eAAI,KAAC,KAAD,EAAO,KAAK,CAAEA,KAAK,CAACC,IAApB,EAJf,GADJ,CAQH,CAnBD,CAqBA,cAAeF,CAAAA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport Parks from './Parks';\nimport useFetch from './useFetch';\n\nconst ParksList = () => {\n    const { data: parks, isPending, error } = useFetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\");\n    //console.log(parks);\n    //const parks = data;\n    //const [Activities, setActivities] = useState([]);\n\n    /*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/\n\n    return (  \n        <div className=\"ParksList\">\n        <h2>All Parks</h2>\n            { error && <div>{ error }</div> }\n            { isPending && <div>Loading...</div> }\n            { parks && <Parks parks={parks.data} /> }\n        </div>\n    );\n}\n \nexport default ParksList;"]},"metadata":{},"sourceType":"module"}