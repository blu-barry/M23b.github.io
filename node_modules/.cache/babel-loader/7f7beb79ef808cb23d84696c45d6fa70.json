{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/SelectWebcams.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelecteWebcam() {\n  _s();\n\n  const [checkedState, setCheckedState] = useState(new Array(toppings.length).fill(false));\n  const [total, setTotal] = useState(0);\n\n  const handleOnChange = position => {\n    const updatedCheckedState = checkedState.map((item, index) => index === position ? !item : item);\n    setCheckedState(updatedCheckedState);\n    const totalPrice = updatedCheckedState.reduce((sum, currentState, index) => {\n      if (currentState === true) {\n        return sum + toppings[index].price;\n      }\n\n      return sum;\n    }, 0);\n    setTotal(totalPrice);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"toppings-list\",\n      children: [toppings.map((_ref, index) => {\n        let {\n          name,\n          price\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toppings-list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `custom-checkbox-${index}`,\n                name: name,\n                value: name,\n                checked: checkedState[index],\n                onChange: () => handleOnChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `custom-checkbox-${index}`,\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right-section\",\n              children: getFormattedPrice(price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toppings-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-section\",\n            children: \"Total:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-section\",\n            children: getFormattedPrice(total)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SelecteWebcam, \"KnEigtTxPZAd6yDY3voqD+QiYTQ=\");\n\n_c = SelecteWebcam;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelecteWebcam\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/SelectWebcams.js"],"names":["React","useEffect","useState","SelecteWebcam","checkedState","setCheckedState","Array","toppings","length","fill","total","setTotal","handleOnChange","position","updatedCheckedState","map","item","index","totalPrice","reduce","sum","currentState","price","name","getFormattedPrice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAC5C,IAAII,KAAJ,CAAUC,QAAQ,CAACC,MAAnB,EAA2BC,IAA3B,CAAgC,KAAhC,CAD4C,CAAhD;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMU,cAAc,GAAIC,QAAD,IAAc;AACnC,UAAMC,mBAAmB,GAAGV,YAAY,CAACW,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAC3CA,KAAK,KAAKJ,QAAV,GAAqB,CAACG,IAAtB,GAA6BA,IADH,CAA5B;AAIAX,IAAAA,eAAe,CAACS,mBAAD,CAAf;AAEA,UAAMI,UAAU,GAAGJ,mBAAmB,CAACK,MAApB,CACjB,CAACC,GAAD,EAAMC,YAAN,EAAoBJ,KAApB,KAA8B;AAC5B,UAAII,YAAY,KAAK,IAArB,EAA2B;AACzB,eAAOD,GAAG,GAAGb,QAAQ,CAACU,KAAD,CAAR,CAAgBK,KAA7B;AACD;;AACD,aAAOF,GAAP;AACD,KANgB,EAOjB,CAPiB,CAAnB;AAUAT,IAAAA,QAAQ,CAACO,UAAD,CAAR;AACD,GAlBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,iBACGX,QAAQ,CAACQ,GAAT,CAAa,OAAkBE,KAAlB,KAA4B;AAAA,YAA3B;AAAEM,UAAAA,IAAF;AAAQD,UAAAA;AAAR,SAA2B;AACxC,4BACE;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,EAAE,EAAG,mBAAkBL,KAAM,EAF/B;AAGE,gBAAA,IAAI,EAAEM,IAHR;AAIE,gBAAA,KAAK,EAAEA,IAJT;AAKE,gBAAA,OAAO,EAAEnB,YAAY,CAACa,KAAD,CALvB;AAME,gBAAA,QAAQ,EAAE,MAAML,cAAc,CAACK,KAAD;AANhC;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAO,gBAAA,OAAO,EAAG,mBAAkBA,KAAM,EAAzC;AAAA,0BAA6CM;AAA7C;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,wBAAgCC,iBAAiB,CAACF,KAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAASL,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAkBD,OAnBA,CADH,eAqBE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBAAgCO,iBAAiB,CAACd,KAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA5DqBP,a;;KAAAA,a","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport \"./index.css\";\n\nexport default function SelecteWebcam() {\n    const [checkedState, setCheckedState] = useState(\n        new Array(toppings.length).fill(false)\n    );\n\n    const [total, setTotal] = useState(0);\n\n    const handleOnChange = (position) => {\n      const updatedCheckedState = checkedState.map((item, index) =>\n        index === position ? !item : item\n      );\n  \n      setCheckedState(updatedCheckedState);\n  \n      const totalPrice = updatedCheckedState.reduce(\n        (sum, currentState, index) => {\n          if (currentState === true) {\n            return sum + toppings[index].price;\n          }\n          return sum;\n        },\n        0\n      );\n  \n      setTotal(totalPrice);\n    };\n  \n    return (\n      <div className=\"App\">\n        <h3>Select Toppings</h3>\n        <ul className=\"toppings-list\">\n          {toppings.map(({ name, price }, index) => {\n            return (\n              <li key={index}>\n                <div className=\"toppings-list-item\">\n                  <div className=\"left-section\">\n                    <input\n                      type=\"checkbox\"\n                      id={`custom-checkbox-${index}`}\n                      name={name}\n                      value={name}\n                      checked={checkedState[index]}\n                      onChange={() => handleOnChange(index)}\n                    />\n                    <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                  </div>\n                  <div className=\"right-section\">{getFormattedPrice(price)}</div>\n                </div>\n              </li>\n            );\n          })}\n          <li>\n            <div className=\"toppings-list-item\">\n              <div className=\"left-section\">Total:</div>\n              <div className=\"right-section\">{getFormattedPrice(total)}</div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}