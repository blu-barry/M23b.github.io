{"ast":null,"code":"/*\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { toppings } from \"./utils/toppings\";\nimport \"./index.css\";\n\nexport default function SelecteWebcam() {\n    const [checkedState, setCheckedState] = useState(\n        new Array(toppings.length).fill(false)\n    );\n\n    const [total, setTotal] = useState(0);\n\n    const handleOnChange = (position) => {\n      const updatedCheckedState = checkedState.map((item, index) =>\n        index === position ? !item : item\n      );\n  \n      setCheckedState(updatedCheckedState);\n  \n      const totalPrice = updatedCheckedState.reduce(\n        (sum, currentState, index) => {\n          if (currentState === true) {\n            return sum + toppings[index].price;\n          }\n          return sum;\n        },\n        0\n      );\n  \n      setTotal(totalPrice);\n    };\n  \n    return (\n      <div className=\"App\">\n        <h3>Select Toppings</h3>\n        <ul className=\"toppings-list\">\n          {toppings.map(({ name, price }, index) => {\n            return (\n              <li key={index}>\n                <div className=\"toppings-list-item\">\n                  <div className=\"left-section\">\n                    <input\n                      type=\"checkbox\"\n                      id={`custom-checkbox-${index}`}\n                      name={name}\n                      value={name}\n                      checked={checkedState[index]}\n                      onChange={() => handleOnChange(index)}\n                    />\n                    <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                  </div>\n                  <div className=\"right-section\">{getFormattedPrice(price)}</div>\n                </div>\n              </li>\n            );\n          })}\n          <li>\n            <div className=\"toppings-list-item\">\n              <div className=\"left-section\">Total:</div>\n              <div className=\"right-section\">{getFormattedPrice(total)}</div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n  */","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/SelectWebcams.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { toppings } from \"./utils/toppings\";\nimport \"./index.css\";\n\nexport default function SelecteWebcam() {\n    const [checkedState, setCheckedState] = useState(\n        new Array(toppings.length).fill(false)\n    );\n\n    const [total, setTotal] = useState(0);\n\n    const handleOnChange = (position) => {\n      const updatedCheckedState = checkedState.map((item, index) =>\n        index === position ? !item : item\n      );\n  \n      setCheckedState(updatedCheckedState);\n  \n      const totalPrice = updatedCheckedState.reduce(\n        (sum, currentState, index) => {\n          if (currentState === true) {\n            return sum + toppings[index].price;\n          }\n          return sum;\n        },\n        0\n      );\n  \n      setTotal(totalPrice);\n    };\n  \n    return (\n      <div className=\"App\">\n        <h3>Select Toppings</h3>\n        <ul className=\"toppings-list\">\n          {toppings.map(({ name, price }, index) => {\n            return (\n              <li key={index}>\n                <div className=\"toppings-list-item\">\n                  <div className=\"left-section\">\n                    <input\n                      type=\"checkbox\"\n                      id={`custom-checkbox-${index}`}\n                      name={name}\n                      value={name}\n                      checked={checkedState[index]}\n                      onChange={() => handleOnChange(index)}\n                    />\n                    <label htmlFor={`custom-checkbox-${index}`}>{name}</label>\n                  </div>\n                  <div className=\"right-section\">{getFormattedPrice(price)}</div>\n                </div>\n              </li>\n            );\n          })}\n          <li>\n            <div className=\"toppings-list-item\">\n              <div className=\"left-section\">Total:</div>\n              <div className=\"right-section\">{getFormattedPrice(total)}</div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n  */"]},"metadata":{},"sourceType":"module"}