{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/Webcams.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Webcams = _ref => {\n  let {\n    parkCode,\n    images\n  } = _ref;\n  //const { data: webcam, isPending, error } = useFetch('https://developer.nps.gov/api/v1/webcams?parkCode='+parkCode+'&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE');\n  //console.log(parks);\n  //const parks = data;\n  //const [Activities, setActivities] = useState([]);\n\n  /*const handleActivitySearch = (activity) => {\n      const newParks = parks.filter(park => park.activities !== activity);\n      setParks(newParks);\n  }*/\n  console.log(webcam);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ParksList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Park Webcams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), images.map(image => images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(image.url),\n        alt: \"cannot display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Webcams;\nexport default Webcams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Webcams\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/Webcams.js"],"names":["React","ReactDOM","useFetch","Webcams","parkCode","images","console","log","webcam","map","image","require","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAG,QAA4B;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA0B;AACxC;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAGQH,MAAM,CAACI,GAAP,CAAYC,KAAD,IACPL,MAAM,CAACI,GAAP,CAAYC,KAAD,iBACP;AAAA,6BACA;AAAK,QAAA,GAAG,EAAEC,OAAO,CAACD,KAAK,CAACE,GAAP,CAAjB;AAA8B,QAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAzBD;;KAAMT,O;AA2BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport useFetch from \"./useFetch\";\n\nconst Webcams = ( { parkCode, images } ) => {\n    //const { data: webcam, isPending, error } = useFetch('https://developer.nps.gov/api/v1/webcams?parkCode='+parkCode+'&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE');\n    //console.log(parks);\n    //const parks = data;\n    //const [Activities, setActivities] = useState([]);\n\n    /*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/\n    console.log(webcam)\n    return (  \n        <div className=\"ParksList\">\n        <h2>Park Webcams</h2>\n        {\n                images.map((image)=>(\n                    images.map((image)=>(\n                        <div>\n                        <img src={require(image.url)} alt=\"cannot display\"/>\n                        </div>\n                    ))\n                ))\n            }\n        </div>\n    );\n}\n \nexport default Webcams;"]},"metadata":{},"sourceType":"module"}