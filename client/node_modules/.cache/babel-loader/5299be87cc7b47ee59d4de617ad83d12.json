{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction AllParks() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [park, setParks] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://developer.nps.gov/api/v1/parks?&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setParks(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  /*    if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <ul>\n          {this.state.park.map((park, index) => {\n             return (<li key={index}>\n              <h2>{ park.fullName }</h2>\n              <div>{ park.description }</div>\n              <div>{ park.parkCode }</div>\n              <div>{ park.url }</div>\n              <p>{ park.activities }</p>\n              <a href={park.url}>{ park.url }</a>\n             </li> )\n          })}\n      </ul>\n        );\n      } */\n}\n\n_s(AllParks, \"WUrc3bP1eIx/o5VgKSbrJrCFG7g=\");\n\n_c = AllParks;\nexport default AllParks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllParks\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/AllParks.js"],"names":["React","useEffect","useState","axios","AllParks","error","setError","isLoaded","setIsLoaded","park","setParks","fetch","then","res","json","result"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAjC,CAHgB,CAKhB;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,0FAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACD,KANL,EAOI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;;GA9CMD,Q;;KAAAA,Q;AAgDP,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction AllParks() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [park, setParks] = useState([]);\n  \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n      fetch(\"https://developer.nps.gov/api/v1/parks?&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setParks(result);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }, [])\n  \n/*    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n        {this.state.park.map((park, index) => {\n           return (<li key={index}>\n            <h2>{ park.fullName }</h2>\n            <div>{ park.description }</div>\n            <div>{ park.parkCode }</div>\n            <div>{ park.url }</div>\n            <p>{ park.activities }</p>\n            <a href={park.url}>{ park.url }</a>\n           </li> )\n        })}\n    </ul>\n      );\n    } */\n  }\n\n  export default AllParks;"]},"metadata":{},"sourceType":"module"}