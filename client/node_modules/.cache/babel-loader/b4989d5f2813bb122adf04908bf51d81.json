{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/Activity.js\";\nimport { useEffect, useState } from 'react';\nimport AllParkList from './AllParkList';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Activity = _ref => {\n  let {\n    Activity\n  } = _ref;\n  //const { data: parks, isPending, error } = useFetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\");\n  //console.log(parks);\n  //const parks = data;\n  //const [Activities, setActivities] = useState([]);\n\n  /*const handleActivitySearch = (activity) => {\n      const newParks = parks.filter(park => park.activities !== activity);\n      setParks(newParks);\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"park-list\",\n    children: Activity.map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"park-preview\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/Parks/${park.parkCode}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: park.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [park.addresses[0].city, \" , \", park.addresses[0].stateCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.map(function (park, idx) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: park.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, activity.parkCode, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Activity;\nexport default Activity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/Activity.js"],"names":["useEffect","useState","AllParkList","useFetch","Link","Activity","map","activity","park","parkCode","fullName","addresses","city","stateCode","data","idx","name"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,QAAQ,GAAG,QAAoB;AAAA,MAAlB;AAAEA,IAAAA;AAAF,GAAkB;AACjC;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGA,QAAQ,CAACC,GAAT,CAAcC,QAAD,iBACZ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASC,IAAI,CAACC,QAAS,EAAlC;AAAA,gCACE;AAAA,oBAAMD,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAKF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAvB,SAAkCJ,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBE,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAMA;AAAA,kBACKC,IAAI,CAACR,GAAL,CAAS,UAASE,IAAT,EAAeO,GAAf,EAAmB;AACzB,8BAAQ;AAAA,sBAAeP,IAAI,CAACQ;AAApB,aAASD,GAAT;AAAA;AAAA;AAAA;AAAA,kBAAR;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cANA;AAAA,OAAoCR,QAAQ,CAACE,QAA7C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA7BD;;KAAMJ,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport AllParkList from './AllParkList';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\n\nconst Activity = ( { Activity } ) => {\n    //const { data: parks, isPending, error } = useFetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\");\n    //console.log(parks);\n    //const parks = data;\n    //const [Activities, setActivities] = useState([]);\n\n    /*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/\n    return (\n        <div className=\"park-list\">\n          {Activity.map((activity) => (\n            <div className=\"park-preview\" key={(activity.parkCode)}>\n              <Link to={`/Parks/${park.parkCode}`}>\n                <h2>{ park.fullName }</h2>\n                <p>{ park.addresses[0].city } , { park.addresses[0].stateCode}</p>\n              </Link>\n            \n            <div>\n                {data.map(function(park, idx){\n                    return (<li key={idx}>{park.name}</li>)\n                })}\n            </div> \n            \n            </div>\n          ))}\n        </div>\n      );\n}\n \nexport default Activity;"]},"metadata":{},"sourceType":"module"}