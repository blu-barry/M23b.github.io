{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/Activities.js\";\nimport { useEffect, useState } from 'react';\nimport ActivityList from './ActivityList';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Activities = _ref => {\n  let {\n    activities\n  } = _ref;\n  //const { data: Alldata, isPending, error } = useFetch(\"https://developer.nps.gov/api/v1/activities/parks?&limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\");\n  //console.log(Alldata);\n  //console.log(parks);\n  //const parks = data;\n  //const [Activities, setActivities] = useState([]);\n\n  /*const handleActivitySearch = (activity) => {\n      const newParks = parks.filter(park => park.activities !== activity);\n      setParks(newParks);\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"park-list\",\n    children: activities.map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"park-preview\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/Activities/${activity.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: activity.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)\n    }, activity.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Activities;\nexport default Activities;\n{\n  activities.data[0].map(function (park, idx) {\n    /*#__PURE__*/\n    _jsxDEV(ParkDetails, {\n      parkCode: park.parkCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this);\n  });\n}\n{\n  activities && activities.data[0].map(function (park, idx) {\n    /*#__PURE__*/\n    _jsxDEV(ParkDetails, {\n      parkCode: park.parkCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this);\n  });\n}\n;\n{\n  park && parks.map(function (park, idx) {\n    /*#__PURE__*/\n    _jsxDEV(ParkDetails, {\n      parkCode: park.parkCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this);\n  });\n}\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/Activities.js"],"names":["useEffect","useState","ActivityList","useFetch","Link","Activities","activities","map","activity","id","name","data","park","idx","parkCode","parks"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGA,UAAU,CAACC,GAAX,CAAgBC,QAAD,iBAEd;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,eAAcA,QAAQ,CAACC,EAAG,EAArC;AAAA,+BACE;AAAA,oBAAMD,QAAQ,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,OAAoCF,QAAQ,CAACC,EAA7C;AAAA;AAAA;AAAA;AAAA,YAFD;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxBD;;KAAMJ,U;AA0BN,eAAeA,UAAf;AAEA;AAEIC,EAAAA,UAAU,CAACK,IAAX,CAAgB,CAAhB,EAAmBJ,GAAnB,CAAuB,UAASK,IAAT,EAAeC,GAAf,EACvB;AAAC;AAAA,YAAC,WAAD;AAAa,MAAA,QAAQ,EAAED,IAAI,CAACE;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAyC,GAD1C;AAEF;AAGF;AAAER,EAAAA,UAAU,IAERA,UAAU,CAACK,IAAX,CAAgB,CAAhB,EAAmBJ,GAAnB,CAAuB,UAASK,IAAT,EAAeC,GAAf,EACvB;AAAC;AAAA,YAAC,WAAD;AAAa,MAAA,QAAQ,EAAED,IAAI,CAACE;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAyC,GAD1C,CAFF;AAIC;AAAA;AAEH;AAAEF,EAAAA,IAAI,IAAKG,KAAK,CAACR,GAAN,CAAU,UAASK,IAAT,EAAeC,GAAf,EACjB;AAAC;AAAA,YAAC,WAAD;AAAa,MAAA,QAAQ,EAAED,IAAI,CAACE;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAyC,GADnC,CAAT;AAEC;AAAA","sourcesContent":["import { useEffect, useState } from 'react';\nimport ActivityList from './ActivityList';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\n\n\nconst Activities = ( { activities } ) => {\n    //const { data: Alldata, isPending, error } = useFetch(\"https://developer.nps.gov/api/v1/activities/parks?&limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\");\n    //console.log(Alldata);\n    //console.log(parks);\n    //const parks = data;\n    //const [Activities, setActivities] = useState([]);\n\n    /*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/\n\n    return (\n        <div className=\"park-list\">\n          {activities.map((activity) => (\n              \n            <div className=\"park-preview\" key={(activity.id)}>\n              <Link to={`/Activities/${activity.id}`}>\n                <h2>{ activity.name }</h2>\n              </Link>\n            </div>\n          ))}\n        </div>\n      );\n}\n\nexport default Activities;\n\n{\n                    \n    activities.data[0].map(function(park, idx)\n    {<ParkDetails parkCode={park.parkCode} />}\n)}\n\n\n{ activities && (\n                    \n    activities.data[0].map(function(park, idx)\n    {<ParkDetails parkCode={park.parkCode} />}\n))};\n\n{ park && (parks.map(function(park, idx)\n    {<ParkDetails parkCode={park.parkCode} />}\n))};"]},"metadata":{},"sourceType":"module"}