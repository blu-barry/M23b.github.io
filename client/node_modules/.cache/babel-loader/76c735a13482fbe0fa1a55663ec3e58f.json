{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\").then(res => {\n        if (!res.ok) {\n          throw Error('could not fetch data for given resource');\n        }\n\n        return res.json();\n      }).then(result => {\n        setIsLoaded(true);\n        setData(result.data);\n        setError(null);\n      }).catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      }); // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n    }, 1000);\n  }, []);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/useFetch.js"],"names":["useState","useEffect","useFetch","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","result","setIsLoaded","catch","err","message"],"mappings":";;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAO;AACbQ,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAAC,oGAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACT,YAAG,CAACA,GAAG,CAACC,EAAR,EAAY;AACR,gBAAMC,KAAK,CAAC,yCAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAND,EAOCJ,IAPD,CAOMK,MAAM,IAAI;AACZC,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAb,QAAAA,OAAO,CAACY,MAAM,CAACb,IAAR,CAAP;AACAK,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACC,OAXL,EAYCU,KAZD,CAYOC,GAAG,IAAI;AACVb,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACW,GAAG,CAACC,OAAL,CAAR;AACH,OAfD,EADa,CAiBb;AACA;AACA;AACH,KApBS,EAoBP,IApBO,CAAV;AAqBH,GAtBQ,EAsBN,EAtBM,CAAT;AAuBA,SAAO;AAACjB,IAAAA,IAAD;AAAOE,IAAAA,SAAP;AAAkBE,IAAAA;AAAlB,GAAP;AACH,CA9BD;;GAAML,Q;;AAiCN,eAAeA,QAAf","sourcesContent":["\nimport { useState, useEffect } from 'react';\n\n\n\nconst useFetch = () => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n\n    useEffect(() =>  {\n        setTimeout(() => {\n            fetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\")\n            .then(res => {\n                if(!res.ok) {\n                    throw Error('could not fetch data for given resource');\n                }\n                return res.json();\n            })\n            .then(result => {\n                setIsLoaded(true);\n                setData(result.data);\n                setError(null);\n                })\n            .catch(err => {\n                setIsPending(false);\n                setError(err.message);\n            })\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n        }, 1000);\n    }, []);\n    return {data, isPending, error}\n}\n\n\nexport default useFetch;\n    "]},"metadata":{},"sourceType":"module"}