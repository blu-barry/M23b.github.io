{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/ActivityList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Park from './Park';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\nimport { useParams } from \"react-router-dom\";\nimport ParkComponent from './ParkComponet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActivityList = () => {\n  _s();\n\n  const {\n    activityId\n  } = useParams();\n  const {\n    data: data,\n    isPending,\n    error\n  } = useFetch(\"https://developer.nps.gov/api/v1/activities/parks?id=\" + activityId + \"&limit=500&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\");\n  const parks = data.parks; //console.log(activity);\n  //console.log('activity in activityList');\n  //console.log(parks);\n  //const parks = data;\n  //const [Activities, setActivities] = useState([]);\n\n  /*const handleActivitySearch = (activity) => {\n      const newParks = parks.filter(park => park.activities !== activity);\n      setParks(newParks);\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Activity \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", activityName, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), activityParks.map(function (park, idx) {\n      /*#__PURE__*/\n      _jsxDEV(ParkComponent, {\n        park: park\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActivityList, \"SjOxuZxYW6xVlV6Qqs5SV9jE8Uo=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = ActivityList;\nexport default ActivityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityList\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/ActivityList.js"],"names":["useEffect","useState","Park","useFetch","Link","useParams","ParkComponent","ActivityList","activityId","data","isPending","error","parks","activityName","activityParks","map","park","idx"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAiBH,SAAS,EAAhC;AAEA,QAAM;AAAEI,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,MAAmCR,QAAQ,CAAC,0DAAwDK,UAAxD,GAAmE,6DAApE,CAAjD;AACA,QAAMI,KAAK,GAAGH,IAAI,CAACG,KAAnB,CAJuB,CAKvB;AACA;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;;AACI,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAOC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGMC,aAAa,CAACC,GAAd,CAAkB,UAASC,IAAT,EAAeC,GAAf,EACZ;AAAC;AAAA,cAAC,aAAD;AAAe,QAAA,IAAI,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA;AAA8B,KADrC,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxBD;;GAAMT,Y;UACqBF,S,EAEkBF,Q;;;KAHvCI,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport Park from './Park';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\nimport { useParams } from \"react-router-dom\";\nimport ParkComponent from './ParkComponet';\n\nconst ActivityList = () => {\n    const { activityId } = useParams();\n    \n    const { data: data, isPending, error } = useFetch(\"https://developer.nps.gov/api/v1/activities/parks?id=\"+activityId+\"&limit=500&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\");\n    const parks = data.parks;\n    //console.log(activity);\n    //console.log('activity in activityList');\n    //console.log(parks);\n    //const parks = data;\n    //const [Activities, setActivities] = useState([]);\n\n    /*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/\n    return (\n        <div>\n            <h2> Activity </h2>\n            <h2> { activityName } </h2>\n            { activityParks.map(function(park, idx)\n                    {<ParkComponent park={park} />}\n            )};\n        </div>\n    );\n}\nexport default ActivityList;\n"]},"metadata":{},"sourceType":"module"}