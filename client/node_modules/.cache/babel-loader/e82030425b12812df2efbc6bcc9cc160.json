{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/Activity.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\nimport ActivityList from './ActivityList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Activity = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const {\n    data: activity,\n    isPending,\n    error\n  } = useFetch('https://developer.nps.gov/api/v1/activities/parks?id=' + id + '&limit=1&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE'); //console.log(Alldata);\n  //console.log(parks);\n  //const parks = data;\n  //const [Activities, setActivities] = useState([]);\n\n  /*const handleActivitySearch = (activity) => {\n      const newParks = parks.filter(park => park.activities !== activity);\n      setParks(newParks);\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ParksList\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 28\n    }, this), activity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"park-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" Parks that offer \", activity.data[0].name, \" activities\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), activity.data[0].parks.map(park => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"park-preview\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/Parks/${park.parkCode}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: park.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this)\n      }, park.parkCode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Activity, \"ndTlkrsrGRhCa3wjtIk0JbThuZ4=\", false, function () {\n  return [useFetch];\n});\n\n_c = Activity;\nexport default Activity;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activity\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/Activity.js"],"names":["useEffect","useState","useFetch","Link","ActivityList","Activity","id","data","activity","isPending","error","name","parks","map","park","parkCode","fullName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,QAAQ,GAAG,QAAc;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC3B,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,MAAuCR,QAAQ,CAAC,0DAAwDI,EAAxD,GAA2D,2DAA5D,CAArD,CAD2B,CAE3B;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;;AAEI,sBAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACMI,KAAK,iBAAI;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YADf,EAEMD,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFnB,EAGMD,QAAQ,iBACN;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,yCAAwBA,QAAQ,CAACD,IAAT,CAAc,CAAd,EAAiBI,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKH,QAAQ,CAACD,IAAT,CAAc,CAAd,EAAiBK,KAAjB,CAAuBC,GAAvB,CAA4BC,IAAD,iBACxB;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,IAAI,CAACC,QAAS,EAAlC;AAAA,iCACI;AAAA,sBAAMD,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,SAAoCF,IAAI,CAACC,QAAzC;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH,CA9BD;;GAAMV,Q;UAC2CH,Q;;;KAD3CG,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\n\nimport ActivityList from './ActivityList';\n\n\nconst Activity = ( { id } ) => {\n    const { data: activity, isPending, error } = useFetch('https://developer.nps.gov/api/v1/activities/parks?id='+id+'&limit=1&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE');\n    //console.log(Alldata);\n    //console.log(parks);\n    //const parks = data;\n    //const [Activities, setActivities] = useState([]);\n\n    /*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/\n\n    return (\n        \n        <div className=\"ParksList\">\n            { error && <div>{ error }</div> }\n            { isPending && <div>Loading...</div> }\n            { activity && \n                <div className=\"park-list\">\n                    <h2> Parks that offer { activity.data[0].name } activities</h2>\n                    {activity.data[0].parks.map((park) => (\n                        <div className=\"park-preview\" key={(park.parkCode)}>\n                            <Link to={`/Parks/${park.parkCode}`}>\n                                <h2>{ park.fullName }</h2>\n                            </Link>\n                        </div>\n                    ))}\n                </div> }\n        </div>\n    );\n}\n\nexport default Activity;"]},"metadata":{},"sourceType":"module"}