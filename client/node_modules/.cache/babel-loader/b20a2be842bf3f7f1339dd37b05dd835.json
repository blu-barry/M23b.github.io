{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  // let name = 'mario';\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [name, setName] = useState('mario');\n  const [parks, setParks] = useState([]);\n  useEffect(() => {\n    fetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setParks(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  const handleClick = e => {\n    setName('luigi');\n    console.log('hello, world', e);\n  };\n\n  const handleClickAgain = (name, e) => {\n    console.log('hello ' + name, e.target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [parks.map(park => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"park-preview\",\n      keys: park.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleClickAgain('mario', e),\n      children: \"Click Me Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"Loq2m+C5qwV04oLUYHY4fmCnfgg=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/Home.js"],"names":["useEffect","useState","Home","error","setError","isLoaded","setIsLoaded","name","setName","parks","setParks","fetch","then","res","json","result","handleClick","e","console","log","handleClickAgain","target","map","park","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,KAAK,CAAC,oGAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACZT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACC,KANL,EAOI;AACA;AACA;AACCZ,IAAAA,KAAD,IAAW;AACXG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACC,KAbL;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAMa,WAAW,GAAIC,CAAD,IAAO;AACvBT,IAAAA,OAAO,CAAC,OAAD,CAAP;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,CAA5B;AACH,GAHD;;AAKA,QAAMG,gBAAgB,GAAG,CAACb,IAAD,EAAOU,CAAP,KAAa;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWZ,IAAvB,EAA6BU,CAAC,CAACI,MAA/B;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACKZ,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACP;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,IAAI,EAAEA,IAAI,CAACC;AAAzC;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBAAKjB;AAAL;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,OAAO,EAAES,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAQ,MAAA,OAAO,EAAGC,CAAD,IAAOG,gBAAgB,CAAC,OAAD,EAAUH,CAAV,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA/CD;;GAAMf,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst Home = () => {\n    // let name = 'mario';\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [name, setName] = useState('mario');\n    const [parks, setParks] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n            setIsLoaded(true);\n            setParks(result);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n            setIsLoaded(true);\n            setError(error);\n            }\n        )\n    }, [])\n\n    const handleClick = (e) => {\n        setName('luigi');\n        console.log('hello, world', e);\n    }\n    \n    const handleClickAgain = (name, e) => {\n        console.log('hello ' + name, e.target);\n    }\n\n    return (  \n        <div className=\"home\">\n            {parks.map((park) => (\n                <div className=\"park-preview\" keys={park.id}> \n\n                </div>\n            ))}\n            <h2>Homepage</h2>\n            <p>{ name }</p>\n            <button onClick={handleClick}>Click Me</button>\n            <button onClick={(e) => handleClickAgain('mario', e)}>Click Me Again</button> \n        </div>\n    );\n}\n \nexport default Home;"]},"metadata":{},"sourceType":"module"}