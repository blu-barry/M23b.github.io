{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/ParkList.js\";\nimport React from \"react\";\nimport Park from \"./Park\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createParkComponents(parkComponents, Allparks) {\n  for (let i = 0; i < Allparks.length; i++) {\n    parkComponents[Allparks[i].fullName] = Park(Allparks[i]);\n  }\n\n  return parkComponents;\n}\n\nexport default class ParkList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      visible: true,\n      loading: true,\n      allParks: [],\n      parkComponents: {}\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      Allparks: data.data,\n      loading: false\n    });\n    createParkComponents(this.state.parkComponents, this.state.allParks);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.Allparks.map((el, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: this.state.visible ? /*#__PURE__*/_jsxDEV(Park, {\n          fullName: el.fullName,\n          description: el.description,\n          addresses: JSON.stringify(el.addresses)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 41\n        }, this) : null\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/ParkList.js"],"names":["React","Park","createParkComponents","parkComponents","Allparks","i","length","fullName","ParkList","Component","state","visible","loading","allParks","componentDidMount","url","response","fetch","data","json","setState","render","map","el","idx","description","JSON","stringify","addresses"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAGA,SAASC,oBAAT,CAA8BC,cAA9B,EAA8CC,QAA9C,EAAwD;AACpD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCF,IAAAA,cAAc,CAACC,QAAQ,CAACC,CAAD,CAAR,CAAYE,QAAb,CAAd,GAAuCN,IAAI,CAACG,QAAQ,CAACC,CAAD,CAAT,CAA3C;AACH;;AACD,SAAOF,cAAP;AACH;;AAED,eAAe,MAAMK,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,OAAO,EAAE,IAFL;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJV,MAAAA,cAAc,EAAE;AAJZ,KAD0C;AAAA;;AAQ3B,QAAjBW,iBAAiB,GAAG;AACtB,UAAMC,GAAG,GAAG,oGAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,QAAQ,EAAEc,IAAI,CAACA,IAAjB;AAAuBN,MAAAA,OAAO,EAAE;AAAhC,KAAd;AACAV,IAAAA,oBAAoB,CAAC,KAAKQ,KAAL,CAAWP,cAAZ,EAA4B,KAAKO,KAAL,CAAWG,QAAvC,CAApB;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACG,KAAKX,KAAL,CAAWN,QAAX,CAAoBkB,GAApB,CAAwB,CAACC,EAAD,EAAKC,GAAL,kBACvB;AAAA,kBACG,KAAKd,KAAL,CAAWC,OAAX,gBAAqB,QAAC,IAAD;AACpB,UAAA,QAAQ,EAAGY,EAAE,CAAChB,QADM;AAEpB,UAAA,WAAW,EAAGgB,EAAE,CAACE,WAFG;AAGpB,UAAA,SAAS,EAAGC,IAAI,CAACC,SAAL,CAAeJ,EAAE,CAACK,SAAlB;AAHQ;AAAA;AAAA;AAAA;AAAA,gBAArB,GAII;AALP,uBADD;AADH;AAAA;AAAA;AAAA;AAAA,YADJ;AAcJ;;AA/BkD","sourcesContent":["import React from \"react\";\nimport Park from \"./Park\";\n\n\nfunction createParkComponents(parkComponents, Allparks) {\n    for (let i = 0; i < Allparks.length; i++) { \n        parkComponents[Allparks[i].fullName] = Park(Allparks[i]);\n    }\n    return parkComponents;\n}\n\nexport default class ParkList extends React.Component {\n    state = {\n        visible: true,\n        loading: true,\n        allParks: [],\n        parkComponents: {}\n    };\n\n    async componentDidMount() {\n        const url = \"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({ Allparks: data.data, loading: false });\n        createParkComponents(this.state.parkComponents, this.state.allParks);\n    }\n\n    render() {\n        return (\n            <div>\n              {this.state.Allparks.map((el, idx) => (\n                <>\n                  {this.state.visible ? <Park \n                    fullName={ el.fullName } \n                    description={ el.description }\n                    addresses={ JSON.stringify(el.addresses) }\n                  /> : null}\n                </>\n              ))}\n            </div>\n          );\n   \n   }\n}\n"]},"metadata":{},"sourceType":"module"}