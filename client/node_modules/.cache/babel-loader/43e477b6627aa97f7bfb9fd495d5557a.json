{"ast":null,"code":"import useFetch from'./useFetch';import{Link,useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Activity=function Activity(){var _useParams=useParams(),id=_useParams.id;var _useFetch=useFetch('https://developer.nps.gov/api/v1/activities/parks?id='+id+'&limit=1&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE'),activity=_useFetch.data,isPending=_useFetch.isPending,error=_useFetch.error;//console.log(Alldata);\n//console.log(parks);\n//const parks = data;\n//const [Activities, setActivities] = useState([]);\n/*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/return/*#__PURE__*/_jsxs(\"div\",{className:\"ParksList\",children:[error&&/*#__PURE__*/_jsx(\"div\",{children:error}),isPending&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),activity&&/*#__PURE__*/_jsxs(\"div\",{className:\"park-list\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\" Parks that offer \",activity.data[0].name,\" activities\"]}),activity.data[0].parks.map(function(park){return/*#__PURE__*/_jsx(\"div\",{className:\"park-preview\",children:/*#__PURE__*/_jsx(Link,{to:\"/Parks/\".concat(park.parkCode),children:/*#__PURE__*/_jsx(\"h2\",{children:park.fullName})})},park.parkCode);})]})]});};export default Activity;","map":{"version":3,"sources":["/Users/mozzy/M23b.github.io/client/src/Activity.js"],"names":["useFetch","Link","useParams","Activity","id","activity","data","isPending","error","name","parks","map","park","parkCode","fullName"],"mappings":"AACA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,C,wFAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,eAAeD,SAAS,EAAxB,CAAQE,EAAR,YAAQA,EAAR,CACA,cAA6CJ,QAAQ,CAAC,wDAAwDI,EAAxD,CAA2D,2DAA5D,CAArD,CAAcC,QAAd,WAAQC,IAAR,CAAwBC,SAAxB,WAAwBA,SAAxB,CAAmCC,KAAnC,WAAmCA,KAAnC,CACA;AACA;AACA;AACA;AAEA;AACJ;AACA;AACA,OAEI,mBAEI,aAAK,SAAS,CAAC,WAAf,WACMA,KAAK,eAAI,qBAAOA,KAAP,EADf,CAEMD,SAAS,eAAI,mCAFnB,CAGMF,QAAQ,eACN,aAAK,SAAS,CAAC,WAAf,wBACI,2CAAwBA,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBG,IAAzC,iBADJ,CAEKJ,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBI,KAAjB,CAAuBC,GAAvB,CAA2B,SAACC,IAAD,qBACxB,YAAK,SAAS,CAAC,cAAf,uBACI,KAAC,IAAD,EAAM,EAAE,kBAAYA,IAAI,CAACC,QAAjB,CAAR,uBACI,oBAAMD,IAAI,CAACE,QAAX,EADJ,EADJ,EAAoCF,IAAI,CAACC,QAAzC,CADwB,EAA3B,CAFL,GAJR,GAFJ,CAkBH,CA/BD,CAiCA,cAAeV,CAAAA,QAAf","sourcesContent":["\nimport useFetch from './useFetch';\nimport { Link, useParams } from \"react-router-dom\";\n\n\nconst Activity = () => {\n    const { id } = useParams();\n    const { data: activity, isPending, error } = useFetch('https://developer.nps.gov/api/v1/activities/parks?id='+id+'&limit=1&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE');\n    //console.log(Alldata);\n    //console.log(parks);\n    //const parks = data;\n    //const [Activities, setActivities] = useState([]);\n\n    /*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/\n\n    return (\n        \n        <div className=\"ParksList\">\n            { error && <div>{ error }</div> }\n            { isPending && <div>Loading...</div> }\n            { activity && \n                <div className=\"park-list\">\n                    <h2> Parks that offer { activity.data[0].name } activities</h2>\n                    {activity.data[0].parks.map((park) => (\n                        <div className=\"park-preview\" key={(park.parkCode)}>\n                            <Link to={`/Parks/${park.parkCode}`}>\n                                <h2>{ park.fullName }</h2>\n                            </Link>\n                        </div>\n                    ))}\n                </div> }\n        </div>\n    );\n}\n\nexport default Activity;"]},"metadata":{},"sourceType":"module"}