{"ast":null,"code":"var _jsxFileName = \"/Users/mozzy/national-parks-web-app/client/src/Parks.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport AllParkList from './AllParkList';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Parks = () => {\n  _s();\n\n  const {\n    data: parks,\n    isPending,\n    error\n  } = useFetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\"); //console.log(parks);\n  //const parks = data;\n\n  const [Activities, setActivities] = useState([]);\n  /*const handleActivitySearch = (activity) => {\n      const newParks = parks.filter(park => park.activities !== activity);\n      setParks(newParks);\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 24\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"park-list\",\n      children: parks.map(park => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"park-preview\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/Parks/${park.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: park.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, park.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Parks, \"NjJXRkLo63Ovr9HAkQgcs2GS5RA=\", false, function () {\n  return [useFetch];\n});\n\n_c = Parks;\nexport default Parks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Parks\");","map":{"version":3,"sources":["/Users/mozzy/national-parks-web-app/client/src/Parks.js"],"names":["useEffect","useState","AllParkList","useFetch","Link","Parks","data","parks","isPending","error","Activities","setActivities","map","park","id","fullName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAoCN,QAAQ,CAAC,oGAAD,CAAlD,CADgB,CAEhB;AACA;;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEA;AACJ;AACA;AACA;;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACMQ,KAAK,iBAAI;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YADf,EAEMD,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFnB,eAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACCD,KAAK,CAACK,GAAN,CAAUC,IAAI,iBACX;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,IAAI,CAACC,EAAG,EAA5B;AAAA,iCACI;AAAA,sBAAMD,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,SAAmCF,IAAI,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA3BD;;GAAMT,K;UACwCF,Q;;;KADxCE,K;AA6BN,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport AllParkList from './AllParkList';\nimport useFetch from './useFetch';\nimport { Link } from 'react-router-dom';\n\nconst Parks = () => {\n    const { data: parks, isPending, error } = useFetch(\"https://developer.nps.gov/api/v1/parks?limit=1000&api_key=gUeSemHr93mXuKE5WqakVIaO2cDN67aqXettWyDE\");\n    //console.log(parks);\n    //const parks = data;\n    const [Activities, setActivities] = useState([]);\n\n    /*const handleActivitySearch = (activity) => {\n        const newParks = parks.filter(park => park.activities !== activity);\n        setParks(newParks);\n    }*/\n\n    return (  \n        <div className=\"home\">\n            { error && <div>{ error }</div> }\n            { isPending && <div>Loading...</div> }\n            <div className=\"park-list\">\n            {parks.map(park => (\n                <div className=\"park-preview\" key={park.id} >\n                <Link to={`/Parks/${park.id}`}>\n                    <h2>{ park.fullName }</h2>\n                </Link>\n                </div>\n            ))}\n            </div>\n\n        </div>\n    );\n}\n \nexport default Parks;"]},"metadata":{},"sourceType":"module"}